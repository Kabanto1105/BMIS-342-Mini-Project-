import pandas as pd

file_path = 'clean_listings.xlsx'  # Adjust this to the actual file name
df = pd.read_excel(file_path)

# Display the first few rows of the DataFrame to check the data
df.head()  # This will show the first 5 rows of the dataset



# Group by neighborhood and calculate average price per neighborhood
price_by_neighborhood = df.groupby('neighbourhood_group_cleansed')['price'].mean().reset_index()

# Sort the data by price in descending order to show neighborhoods with the highest average price
price_by_neighborhood_sorted = price_by_neighborhood.sort_values('price', ascending=False)

# Display the top neighborhoods with the highest average price
print("Top 10 neighborhoods with the highest average price")
print(price_by_neighborhood_sorted.head(15))

# Group by neighborhood to get average occupancy
occupancy_by_neighborhood = df_cleaned.groupby('neighbourhood_group_cleansed')['estimated_occupancy_l365d'].mean().reset_index()

# Sort by occupancy to identify neighborhoods with higher occupancy
occupancy_by_neighborhood = occupancy_by_neighborhood.sort_values(by='estimated_occupancy_l365d', ascending=False)

# Display the result
occupancy_by_neighborhood.head(15)  # Shows neighborhoods with the highest average occupancy



price_by_neighborhood = df.groupby('neighbourhood_group_cleansed')['price'].mean().reset_index()

# Sort by price in descending order
price_by_neighborhood_sorted = price_by_neighborhood.sort_values(by='price', ascending=False)

# Plot the price variation by neighborhood
plt.figure(figsize=(10,6))
plt.bar(price_by_neighborhood_sorted['neighbourhood_group_cleansed'], price_by_neighborhood_sorted['price'])
plt.xticks(rotation=90)  # Rotate the x-axis labels for better readability
plt.xlabel('Neighborhood')
plt.ylabel('Average Price')
plt.title('Price Variation by Neighborhood')
plt.show()


# Show price variation by room type and neighborhood
price_variation = df.groupby(['room_type', 'neighbourhood_group_cleansed'])['price'].mean().reset_index()

print("\nPrice variation by room type and neighborhood:")
print(price_variation)

# Plot price  organized  by room type and neighborhood
plt.figure(figsize=(12, 7))
for room_type in price_variation['room_type'].unique():
    room_data = price_variation[price_variation['room_type'] == room_type]
    plt.plot(room_data['neighbourhood_group_cleansed'], room_data['price'], marker='o', label=room_type)

plt.xlabel('Neighborhood')
plt.ylabel('Average Price')
plt.title('Price Variation by Room Type and Neighborhood')
plt.xticks(rotation=90)
plt.legend(title='Room Type')
plt.show()


